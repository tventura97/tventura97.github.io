{"version":3,"sources":["Menubar.js","Projects.js","ProjectsPage.js","HomePage.js","Resume.js","Bio.js","App.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/lib/display sync","TVResume.pdf","circles.jpg","vinny.jpg","rfindlogo.jpg","mehackru.jpg","comingsoon.png","pic.jpg"],"names":["MenuBar","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","activeItem","handleSubmit","val","onChange","handleItemClick","e","_ref","name","setState","bind","assertThisInitialized","inherits","createClass","key","value","react_default","a","createElement","id","Menu","secondary","Item","onClick","Component","ProjectsPage","Vinny","Circles","client","contentful","space","accessToken","fetchVinny","getEntry","then","entry","fields","console","log","fetchCircles","setPosts","_this2","ProjectsGrid","Header","size","Card","Group","itemsPerRow","className","Image","src","VinnyPic","Content","Description","RfindLogo","ComingSoonImage","CirclesImage","content","toString","includes","Button","Icon","title","react_markdown","source","technologies","react_scroll_up_default","showUnder","motivation","process","results","window","location","href","HomePage","alert","iconClicked","open","Grid","columns","padded","Column","Resume","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","pageNumber","loading","DownloadResume","ResumePDF","setTimeout","Loader","active","inline","entry_noworker","file","color","Bio","Story","bold","About","Picture","panes","menuItem","render","Tab","Pane","menu","fluid","vertical","tabular","App","handleChange","activeContent","HomePage_HomePage","Bio_Bio","Resume_Resume","ProjectsPage_ProjectsPage","Menubar_MenuBar","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackEmptyContext","req","Error","code","keys","resolve","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.56408030.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport { Menu, Segment } from 'semantic-ui-react'\r\nimport './Menubar.css';\r\nimport { Header } from 'semantic-ui-react'\r\n\r\n\r\nexport class MenuBar extends Component {\r\n    state = { activeItem: 'closest' }\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.handleItemClick = this.handleItemClick.bind(this);\r\n    }\r\n\r\n    state = { activeItem: 'menu' }\r\n\r\n    handleSubmit = (val)=> {\r\n        this.props.onChange(val);\r\n    }\r\n    handleItemClick = (e, { name }) => {\r\n        this.setState({ activeItem: name });\r\n        this.handleSubmit(name);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { activeItem } = this.state\r\n\r\n        return (\r\n            <div id = 'Menubar-MainMenu'>\r\n                <Menu secondary >\r\n                    <Menu.Item\r\n                        name='Home'\r\n                        onClick={this.handleItemClick}\r\n                    >\r\n                        Home\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                        name='About'\r\n                        onClick={this.handleItemClick}\r\n                    >\r\n                        About\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        name='Resume'\r\n                        onClick={this.handleItemClick}\r\n                    >\r\n                        Resume\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        name='Projects'\r\n                        onClick={this.handleItemClick}\r\n                    >\r\n                        Projects\r\n                    </Menu.Item>\r\n                </Menu>\r\n        </div>\r\n        )\r\n    }\r\n}","import {Component} from \"react\";\r\nimport React from \"react\";\r\nimport './Projects.css'\r\nimport { Grid, Icon, Image, Header, Card} from 'semantic-ui-react'\r\n\r\nexport class Projects extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.handleItemClick = this.handleItemClick.bind(this);\r\n    }\r\n\r\n    state = { activeItem: 'menu' }\r\n\r\n\r\n    handleItemClick = (e, { name }) => {\r\n        alert(name)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"Projects\">\r\n                <Card.Group itemsPerRow={4}>\r\n                    <Card name = \"Project\" onClick = {this.handleItemClick}>\r\n                        <Image src='https://react.semantic-ui.com/images/avatar/large/matthew.png' />\r\n                        <Card.Content>\r\n                            <Card.Header>Matthew</Card.Header>\r\n                            <Card.Meta>\r\n                                <span className='date'>Joined in 2015</span>\r\n                            </Card.Meta>\r\n                            <Card.Description>Matthew is a musician living in Nashville.</Card.Description>\r\n                        </Card.Content>\r\n                        <Card.Content extra>\r\n                            <a>\r\n                                <Icon name='user' />\r\n                                22 Friends\r\n                            </a>\r\n                        </Card.Content>\r\n                    </Card>\r\n                </Card.Group>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}","import {Component} from \"react\";\r\nimport React from \"react\";\r\nimport './Projects.css'\r\nimport { Projects } from './Projects'\r\nimport {Image, Icon, Header, Card, Button} from 'semantic-ui-react'\r\nimport './ProjectsPage.css'\r\nimport * as contentful from 'contentful'\r\nimport ScrollToTop from 'react-scroll-up'\r\nimport ComingSoonImage from './comingsoon.png'\r\nimport CirclesImage from './circles.jpg'\r\nimport VinnyPic from './vinny.jpg'\r\nimport RfindLogo from './rfindlogo.jpg'\r\nimport * as Markdown from 'react-markdown'\r\n\r\n\r\nexport class ProjectsPage extends Component {\r\n\r\n    state = {\r\n        Vinny: false,\r\n        Circles:false,\r\n\r\n    }\r\n\r\n    client  = contentful.createClient({\r\n        space: '75z2171sm1m9',\r\n        accessToken: 'e105aad71c1abf93c00ca718814bfd0c1f22e3c397fef55a629272faa10159d7' })\r\n\r\n    componentDidMount() {\r\n        this.fetchVinny().then(this.setPosts);\r\n        this.fetchCircles().then(this.setPosts);\r\n    }\r\n    //Gonna just do this a really janky way bc I don't have the time to do it any differently.\r\n\r\n    fetchVinny = () => this.client.getEntry('2L9vt2HTjqK2OGEuaMqGm8')\r\n        .then(entry => {\r\n            if(entry.fields){\r\n                console.log(entry.fields)\r\n                this.setState({\r\n                    Vinny: entry.fields,\r\n                })\r\n            }\r\n        })\r\n    fetchCircles = () => this.client.getEntry('4Z12b83jF6koKEOOG8scqs')\r\n        .then(entry => {\r\n            if(entry.fields){\r\n                console.log(entry.fields)\r\n                this.setState({\r\n                    Circles: entry.fields,\r\n                })\r\n            }\r\n        })\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { activeItem: 'ProjectsGrid' };\r\n    }\r\n\r\n\r\n    handleItemClick = (e, { name }) => {\r\n        this.setState({ activeItem: name });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const Vinny = () => (\r\n            <div className=\"Project-Vinny\">\r\n                <p>\r\n                </p>\r\n                <div className = \"BackButton\">\r\n                    <Button name = 'ProjectsGrid'  onClick={this.handleItemClick}>\r\n                        <Icon name = 'arrow left' size ='large'>\r\n                        </Icon>\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className = \"ProjectHeader\">\r\n                    <Header size = 'huge'>{this.state.Vinny.title} </Header>\r\n                    <Header size = 'medium'>Skills & Techs:</Header>\r\n                    <Markdown source = {this.state.Vinny.technologies}/>\r\n                </div>\r\n                <ScrollToTop showUnder={160}>\r\n                    <span>UP</span>\r\n                </ScrollToTop>\r\n                <div className = \"motivation\">\r\n                    <Header size = 'medium'> Motivation </Header>\r\n                <Markdown source = {this.state.Vinny.motivation}/>\r\n                </div>\r\n                <div className = \"process\">\r\n                    <Header size = 'medium'> Process (in progress) </Header>\r\n                    <Markdown source = {this.state.Vinny.process}/>\r\n                </div>\r\n                <div className = \"results\">\r\n                    <Header size = 'medium'> Results </Header>\r\n\r\n                    <Markdown source = {this.state.Vinny.results}/>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n        const Circles = () => (\r\n            <div className=\"Project-Circles\">\r\n                <p>\r\n                </p>\r\n                <div className = \"BackButton\">\r\n                    <Button name = 'ProjectsGrid'  onClick={this.handleItemClick}>\r\n                        <Icon name = 'arrow left' size ='large'>\r\n                        </Icon>\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className = \"ProjectHeader\">\r\n                    <Header size = 'huge'>{this.state.Circles.title} </Header>\r\n                    <Header size = 'medium'>Skills & Techs:</Header>\r\n                    <Markdown source = {this.state.Circles.technologies}/>\r\n                </div>\r\n                <ScrollToTop showUnder={160}>\r\n                    <span>UP</span>\r\n                </ScrollToTop>\r\n                <div className = \"motivation\">\r\n                    <Header size = 'medium'> Motivation </Header>\r\n                    <Markdown source = {this.state.Circles.motivation}/>\r\n                </div>\r\n                <div className = \"process\">\r\n                    <Header size = 'medium'> Process</Header>\r\n                    <Markdown source = {this.state.Circles.process}/>\r\n                </div>\r\n                <div className = \"results\">\r\n                    <Header size = 'medium'> Results </Header>\r\n\r\n                    <Markdown source = {this.state.Circles.results}/>\r\n\r\n                </div>\r\n                <div>\r\n\r\n                    <Header size = 'medium'> The application is currently being developed.</Header>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n        const ProjectsGrid = () => (\r\n            <div>\r\n                <div id = \"Projects-Header\">\r\n                    <Header size = 'huge'>\r\n                        Projects\r\n                    </Header>\r\n                </div>\r\n\r\n                <Card.Group itemsPerRow={4} className = \"CardGroup\" name = 'ProjectsGrid'>\r\n                    <Card name = \"Project-Vinny\" onClick = {this.handleItemClick}>\r\n                        <Image src = { VinnyPic } />\r\n                        <Card.Content>\r\n                            <Card.Header>Audio \"Vinylizer\"</Card.Header>\r\n                            <Card.Description>Makes audio sound retro. (content being updated)</Card.Description>\r\n                        </Card.Content>\r\n                    </Card>\r\n\r\n                    <Card name = \"Project-RFInD\" onClick = {this.handleItemClick}>\r\n                        <Image src={ RfindLogo } />\r\n                        <Card.Content>\r\n                            <Card.Header>RFInD (coming soon)</Card.Header>\r\n                            <Card.Description>RFID based location tracking startup.</Card.Description>\r\n                        </Card.Content>\r\n                    </Card>\r\n\r\n                    <Card name = \"Project-Optics\" onClick = {this.handleItemClick}>\r\n                        <Image src={ComingSoonImage} />\r\n                        <Card.Content>\r\n                            <Card.Header>Learn Optics (github link)</Card.Header>\r\n                            <Card.Description>Learn optics.</Card.Description>\r\n                        </Card.Content>\r\n                    </Card>\r\n\r\n                    <Card name = \"Project-Face\" onClick = {this.handleItemClick}>\r\n                        <Image src={ComingSoonImage} />\r\n                        <Card.Content>\r\n                            <Card.Header>Facial Recognition Vending Machine (coming soon)</Card.Header>\r\n                            <Card.Description>It knows what your favorite candy is.</Card.Description>\r\n                        </Card.Content>\r\n                    </Card>\r\n\r\n\r\n                    <Card name = \"Project-Entry\" onClick = {this.handleItemClick}>\r\n                        <Image src={ComingSoonImage} />\r\n                        <Card.Content>\r\n                            <Card.Header>FreelyEntry</Card.Header>\r\n                            <Card.Description>Take the hassle out of journaling.</Card.Description>\r\n                        </Card.Content>\r\n                    </Card>\r\n\r\n                    <Card name = \"Project-Circles\" onClick = {this.handleItemClick}>\r\n                        <Image src={CirclesImage} />\r\n                        <Card.Content>\r\n                            <Card.Header>Circles</Card.Header>\r\n                            <Card.Description>Make hanging out with your friends much easier.</Card.Description>\r\n                        </Card.Content>\r\n                    </Card>\r\n\r\n                    <Card name = \"Project-LoRa\" onClick = {this.handleItemClick}>\r\n                        <Image src={ComingSoonImage} />\r\n                        <Card.Content>\r\n                            <Card.Header>LoRa Notifier</Card.Header>\r\n                            <Card.Description>Use the LoRa network to let someone know you're thinking about them.</Card.Description>\r\n                        </Card.Content>\r\n                    </Card>\r\n\r\n                    <Card name = \"Project-Equalizer\" onClick = {this.handleItemClick}>\r\n                        <Image src={ComingSoonImage} />\r\n                        <Card.Content>\r\n                            <Card.Header>Graphical Equalizer (github link)</Card.Header>\r\n                            <Card.Description>Simple, graphical equalizer implemented in MATLAB.</Card.Description>\r\n                        </Card.Content>\r\n                    </Card>\r\n\r\n                    <Card name = \"Project-DressMe\" onClick = {this.handleItemClick}>\r\n                        <Image src={ComingSoonImage} />\r\n                        <Card.Content>\r\n                            <Card.Header>DressMe</Card.Header>\r\n                            <Card.Description>Don't feel like keeping up with the latest fashion trends? Let our ML Algorithms do it for you.</Card.Description>\r\n                        </Card.Content>\r\n                    </Card>\r\n\r\n                    <Card name = \"Project-Banking\" onClick = {this.handleItemClick}>\r\n                        <Image src={ComingSoonImage} />\r\n                        <Card.Content>\r\n                            <Card.Header>Simple Banking Application (github link)</Card.Header>\r\n                            <Card.Description>Simple banking console application.</Card.Description>\r\n                        </Card.Content>\r\n                    </Card>\r\n\r\n                    <Card name = \"Project-Account\" onClick = {this.handleItemClick}>\r\n                        <Image src={ComingSoonImage} />\r\n                        <Card.Content>\r\n                            <Card.Header>Simple Account Management Application (github link)</Card.Header>\r\n                            <Card.Description>Simple account management console application.</Card.Description>\r\n                        </Card.Content>\r\n                    </Card>\r\n                </Card.Group>\r\n            </div>\r\n        )\r\n\r\n\r\n\r\n\r\n        const state = this.state.activeItem;\r\n        let content = <ProjectsGrid/>\r\n\r\n        if(state === 'ProjectsGrid'){\r\n            content = <ProjectsGrid/>;\r\n        }\r\n        else if(state.toString().includes('Vinny')){\r\n\r\n            content = <Vinny></Vinny>\r\n\r\n        }\r\n        else if(state.toString().includes('Circles')){\r\n\r\n            content = <Circles></Circles>\r\n\r\n        }\r\n        else if(state.toString().includes('Optics')){\r\n\r\n            window.location.href = \"https://github.com/tventura97/Learn-Optics---Unity/tree/develop\"\r\n\r\n        }\r\n        else if(state.toString().includes('Banking')){\r\n\r\n            window.location.href = \"https://github.com/tventura97/Bank-Account-Console-App\"\r\n\r\n        }\r\n        else if(state.toString().includes('Account')){\r\n\r\n            window.location.href = \"https://github.com/tventura97/AccMgmt-Console-App\"\r\n\r\n        }\r\n        else if(state.toString().includes('Equalizer')){\r\n\r\n            window.location.href = \"https://github.com/tventura97/Equalizer\"\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        //Grid of Projects\r\n\r\n        return (\r\n            <div className=\"Projects\">\r\n                <div>\r\n                    { content }\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}","import {Component} from \"react\";\r\nimport React from \"react\";\r\nimport  Hamster from \"./pic.jpg\"\r\nimport './HomePage.css'\r\nimport { Grid, Icon, Divider, Header, Button } from 'semantic-ui-react'\r\nimport { ProjectsPage } from './ProjectsPage'\r\n\r\nexport class HomePage extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.handleItemClick = this.handleItemClick.bind(this);\r\n    }\r\n\r\n    handleSubmit = (val)=> {\r\n        this.props.onChange(val);\r\n    }\r\n    handleItemClick = (e, { name }) => {\r\n        alert(name)\r\n        this.setState({ activeItem: name });\r\n        this.handleSubmit(name);\r\n    }\r\n\r\n\r\n    iconClicked = (name) =>\r\n    {\r\n        if (name == 'LinkedIn')\r\n        {\r\n            window.location.href = \"https://www.linkedin.com/in/tristanventura\"\r\n        }\r\n        if (name == 'Github')\r\n        {\r\n            window.location.href = \"https://www.github.com/tventura97\"\r\n        }\r\n        if (name == 'Maisy')\r\n        {\r\n            window.location.href = \"https://maisyleigh.github.io/\"\r\n        }\r\n        if (name == 'Mail'){\r\n            window.open('mailto:tventura0297@gmail.com?subject=subject&body=body');\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className=\"HomePage\">\r\n                <div  id = \"MainQuote\">\r\n                    <Header size = 'huge'> I like to make stuff. </Header>\r\n                </div>\r\n\r\n                <div id = \"Icons\">\r\n                    <Grid columns = {4} padded>\r\n                        <Grid.Column>\r\n                        <Icon name='github' size = 'big' onClick = {() => this.iconClicked('Github')}/>\r\n                        </Grid.Column>\r\n                        <Grid.Column>\r\n                        <Icon name='linkedin' size = 'big' onClick = {() => this.iconClicked('LinkedIn')}/>\r\n                        </Grid.Column>\r\n                        <Grid.Column>\r\n                        <Icon name='mail' size = 'big'onClick = {() => this.iconClicked('Mail')}/>\r\n                        </Grid.Column>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Document, Page } from 'react-pdf/dist/entry.noworker';\r\nimport ResumePDF from './TVResume.pdf'\r\nimport { Button, Loader } from 'semantic-ui-react'\r\nimport './Resume.css'\r\n\r\n\r\nexport class Resume extends Component {\r\n\r\n    state = {\r\n        pageNumber: 1,\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => this.setState({ loading: false }), 2000); // simulates an async action, and hides the spinner\r\n    }\r\n\r\n    DownloadResume = () => {\r\n        window.location = ResumePDF;\r\n\r\n\r\n    }\r\n    render() {\r\n        const { pageNumber } = this.state;\r\n        const { loading } = this.state;\r\n\r\n\r\n        if(loading) { // if your component doesn't have to wait for an async action, remove this block\r\n            return (<div id=\"Loader\"><Loader active inline='centered'></Loader></div>)\r\n        }\r\n\r\n\r\n\r\n        return (\r\n                <div id = \"Resume\">\r\n                    <Document\r\n                        file={ResumePDF}\r\n                    >\r\n                        <Page pageNumber={pageNumber} />\r\n\r\n                    </Document>\r\n                    <div id = \"DownloadButton\">\r\n                      <Button onClick = {this.DownloadResume} color = 'green'>Download</Button>\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport { Menu, Segment } from 'semantic-ui-react'\r\nimport './Bio.css';\r\nimport Picture from './mehackru.jpg'\r\nimport { Header, Image, Tab } from 'semantic-ui-react'\r\nimport {MenuBar} from \"./Menubar\";\r\n\r\nexport class Bio extends Component {\r\n\r\n    render() {\r\n        const Story = () => (\r\n            <div id = \"Bio\">\r\n                <Header bold size = 'tiny'> We called it RFInD.\r\n                </Header>\r\n                <p>\r\n                    I started my first year at Rutgers University and quickly found myself surrounded by people with the same interests as me: creating things and technology. It didn’t take us long to come up with an idea that we were passionate about.\r\n\r\n                    We learned about the chaos and disorganization that plagued triage stations and emergency rooms during disasters and decided to try and do something about it. RFInD is an RFID based real-time location tracking system designed to allow doctors to track patients and their status so that those who needed treatment sooner would get it sooner. We pitched the idea everywhere we could, raised over $10,000 in funding, and even got invited to present our work at the Clinton Global Initiative - University (CGI-U) annual conference. RFInD was very technically challenging. It wasn’t easy (or cheap) to come up with an implementation of the idea that was both economical and effective. But, I was passionate about the idea. I spent more time learning about RFIDs than any average college student should.  But, it was a wonderful experience and taught me an extremely valuable lesson:                     </p>\r\n                <Header bold size = 'tiny'> I learned that there will be times where the things that you know and the skills that you have might not be enough. You should always be ready to learn whatever it takes.\r\n                </Header>\r\n                <p>\r\n                    RFInD wasn’t the first time that I would be faced with this situation. I landed a job as an undergrad EE researcher for the National Science Foundation. Because of my background, I was initially assigned to a project focused on investigating different ways of implementing indoor tracking systems. However, since I was the only intern who had some form of programming experience, they reassigned me to a different project - developing a mobile application that would assist students in learning physics. I had taken classes in C++ for my major, but I never learned anything about developing mobile apps. I ended up learning the fundamentals of app development and even some game design basics. I worked closely with the physics professors that would be adopting my application and used Unity to create a mobile application that provided a more interactive learning experience. My dedication paid off and my work ended up getting published and presented at the ASEE annual conference in 2018. It also expanded my interests from designing hardware to developing software.\r\n                </p>\r\n                <Header bold size = 'tiny'> This would come in handy for my next internship, which ended up being the most challenging but fulfilling role I’ve ever held.\r\n                </Header>\r\n                <p>\r\n                    In the Summer of 2018, I interned for a company, AdhereTech, in New York City. AdhereTech makes smart pill bottles that help patients take their medications on time. I had two responsibilities as their sole electrical engineering intern: create automated testing equipment for their bottle and design a new sensor for their next generation products. It sounded simple enough. But as my work progressed, I found myself taking charge of a lot more things. The initial plan for the testing equipment was pretty basic: a few physical buttons to set some parameters and a basic display. This proved problematic, as the setup didn’t give the equipment much functionality.\r\n                </p>\r\n                <Header bold size = 'tiny'> I knew that there was a better way to approach this problem.\r\n                </Header>\r\n                <p>\r\n                    I suggested developing a high level software interface as well. The application would talk to an Arduino or other microcontroller platform, which was responsible for handling the hardware rather than the Arduino and a few physical buttons serving as the sole method of communicating with the test equipment. While it would require developing two pieces of software (one to handle the hardware and one that handled the UI/communicating with the Arduino), I firmly believed that this was a better route.\r\n\r\n                </p>\r\n                <Header bold size = 'tiny'> They gave my idea the green light.\r\n                </Header>\r\n                <p>\r\n                    I was essentially responsible for the development of the testing equipment from the ground up. So, I spent the first 6 weeks of my internship designing the hardware for the testing equipment, writing the code responsible for controlling the hardware, and developing a desktop application that would communicate with both the Arduino and the bottle’s sensors to gather data. It was capable of testing a bottle, producing thousands of data points, and analyzing that data to provide the user with information about the performance of different sensors. After the equipment was operating reliably, I was then tasked with improving one of the sensors in the bottle. I wasn’t exposed to anything related to electromagnetic sensor design in school, so this was an entirely new realm for me. I learned everything I could about electromagnetic sensor design and its use in the industry, and applied that knowledge in my internship. I created several different sensor patterns and, using the equipment I built earlier, acquired and analyzed thousands of data points to determine which patterns had the best performance. I iterated on my designs and determined the relationships between the effectiveness of the sensors and the different parameters taken into account when designing the pattern. Using this knowledge, I developed a new sensor design that showed greatly improved performance compared to the sensor currently in use.\r\n                </p>\r\n                <p>\r\n                    That internship gave me the opportunity to take my creative passion and apply it in the industry. It gave me the experience of creating every aspect of a product, software and hardware, and pointed me in the direction that I want to take my career.\r\n                </p>\r\n                <Header bold size = 'tiny'>\r\n                    I want to expand my skills in a position that pushes my creativity to the limits.\r\n                </Header>\r\n             </div>\r\n\r\n        )\r\n\r\n        const About = () => (\r\n            <div>\r\n                <Image id = 'HackRUImage' src= { Picture } size='medium'/>\r\n                <Header bold size = 'large'> I like to make stuff.</Header>\r\n                <p>\r\n                    For as long as I can remember, I was always taking things apart; trying to discover what made them tick. Whether it was TV remotes, video game controllers, the family landline, and, at one point, even my mother’s tube of lipstick (I got into quite a bit of trouble for that one).\r\n                </p>\r\n                <Header bold size = 'tiny'> This strange inclination to constantly take things apart in an attempt to figure out how they worked quickly evolved into a new passion: making things. </Header>\r\n\r\n                <p>\r\n                    I started with small things, like paper pencil cases or weird cardboard contraptions. There wasn’t much of a purpose or direction to my habit. I kind of just made anything that came to mind. That is, until I found my dad working on the family computer. He walked me through how everything fit together and, even though I couldn’t understand what he was talking about at the time, I was intrigued. I knew at that moment that my passion was technology. I started building my own computers, then building them for my friends, then finding any excuse to build them in general. But, I wasn’t satisfied with just building computers. I wanted to take my desire to create things and apply it on a wider spectrum. So, going into college, I decided to major in electrical and computer engineering. I knew that it would give me the skills that I needed to be able to pursue my interests as a career.\r\n                </p>\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n        )\r\n        const panes = [\r\n            { menuItem: 'Who I am', render: () => <Tab.Pane><About></About></Tab.Pane> },\r\n            { menuItem: 'My Story', render: () => <Tab.Pane><Story></Story></Tab.Pane> },\r\n           // { menuItem: 'Tab 3', render: () => <Tab.Pane>Tab 3 Content</Tab.Pane> },\r\n        ]\r\n\r\n        const BioTabs = () => (\r\n            <Tab menu={{ fluid: true, vertical: true, tabular: true }} panes={panes} />\r\n        )\r\n\r\n\r\n        return (\r\n\r\n            <div>\r\n                <div id = \"Tabs\">\r\n                    <BioTabs></BioTabs>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport './semantic/dist/semantic.min.css';\r\nimport { MenuBar } from './Menubar';\r\nimport { HomePage } from './HomePage';\r\nimport { Projects } from './Projects';\r\nimport { Header } from 'semantic-ui-react';\r\nimport { Resume } from './Resume'\r\nimport { Bio }  from './Bio';\r\nimport { ProjectsPage } from './ProjectsPage'\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { activeItem: 'Home' };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n\r\n    handleChange = activeItem => {\r\n        this.setState({activeItem});\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const state = this.state.activeItem;\r\n        let activeContent;\r\n        if(state === 'Home'){\r\n            activeContent = <HomePage></HomePage>\r\n        }\r\n        if(state === 'About'){\r\n            activeContent = <Bio></Bio>\r\n        }\r\n        if(state === 'Resume'){\r\n            activeContent = <Resume></Resume>\r\n        }\r\n        if(state === 'Projects'){\r\n            activeContent = <ProjectsPage></ProjectsPage>\r\n        }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n          <div id = \"Header\">\r\n              <h1 id = \"Name\"> Tristan Ventura </h1>\r\n              <MenuBar onChange={this.handleChange}></MenuBar>\r\n          </div>\r\n          <div className = \"Body\">\r\n              {activeContent}\r\n          </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport * as contentful from 'contentful'\r\n\r\n\r\nvar client  = contentful.createClient({\r\n    space: '75z2171sm1m9',\r\n    accessToken: 'e105aad71c1abf93c00ca718814bfd0c1f22e3c397fef55a629272faa10159d7' })\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 168;","module.exports = __webpack_public_path__ + \"static/media/TVResume.fa163f2e.pdf\";","module.exports = __webpack_public_path__ + \"static/media/circles.84ec15e1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vinny.635e2dc8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rfindlogo.75cb024c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mehackru.eecd2c0d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/comingsoon.bdaa3a73.png\";","module.exports = __webpack_public_path__ + \"static/media/pic.7fb65108.jpg\";"],"sourceRoot":""}